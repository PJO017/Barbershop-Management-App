// Generated by view binder compiler. Do not edit!
package com.example.barbershopmanagementapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.barbershopmanagementapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityReviewsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button add;

  @NonNull
  public final TextView barberName;

  @NonNull
  public final TextView barberRating;

  @NonNull
  public final ListView reviewsListView;

  @NonNull
  public final Toolbar toolbar;

  private ActivityReviewsBinding(@NonNull LinearLayout rootView, @NonNull Button add,
      @NonNull TextView barberName, @NonNull TextView barberRating,
      @NonNull ListView reviewsListView, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.add = add;
    this.barberName = barberName;
    this.barberRating = barberRating;
    this.reviewsListView = reviewsListView;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityReviewsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityReviewsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_reviews, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityReviewsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add;
      Button add = ViewBindings.findChildViewById(rootView, id);
      if (add == null) {
        break missingId;
      }

      id = R.id.barber_name;
      TextView barberName = ViewBindings.findChildViewById(rootView, id);
      if (barberName == null) {
        break missingId;
      }

      id = R.id.barber_rating;
      TextView barberRating = ViewBindings.findChildViewById(rootView, id);
      if (barberRating == null) {
        break missingId;
      }

      id = R.id.reviews_list_view;
      ListView reviewsListView = ViewBindings.findChildViewById(rootView, id);
      if (reviewsListView == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityReviewsBinding((LinearLayout) rootView, add, barberName, barberRating,
          reviewsListView, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
